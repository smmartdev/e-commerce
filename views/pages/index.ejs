<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Welcome to Our Store</title>
  <link rel="stylesheet" href="/styles/header.css">
  <link rel="stylesheet" href="/styles/index.css">
  <style>
    .cartNotificationBadge {
      position: absolute;
      top: -5px;
      /* Adjust according to your design */
      right: -5px;
      /* Adjust according to your design */
      background: red;
      color: white;
      border-radius: 50%;
      width: 20px;
      height: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 14px;
      font-weight: bold;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
      /* Optional: for better visibility */
      visibility: hidden;
      /* Start hidden */
    }

    .cartIconBt {
      position: relative;
      /* Needed to position the badge correctly */
    }
  </style>
</head>

<body>
  <header>
    <div class="logo">
      <a href="/"><img id="logoImage" src="images/indexLogo.png" alt="Logo"></a>
    </div>
    <nav>
      <ul id="navigatorUl">
        <li class="navigatorItem"><a href="/">Home</a></li>
        <li class="navigatorItem"><a href="/products">Products</a></li>
        <% if (properties.isAdmin) { %>
          <li class="navigatorItem"><a href="/users">Users</a></li>
          <% } %>

            <li class="navigatorItem"><a href="/contactUs">Contact Us</a></li>
      </ul>
    </nav>
    <div id="loginprofileswapdiv">
      <% if (properties.isLogged) { %>
        <!-- Display profile icon if user is logged in -->
        <a class="loginProflieBt" href="/users/profile/<%= properties.userId %>" title="Profile">
          <img class="loginProflieimg" src="images/users/<%= properties.userId %>.jpg" alt="Profile">
          <!-- <img class="loginProflieimg" src="./images/profileLogo.jpg" alt="Profile"> -->

        </a>
        <!-- Display cart icon if user is logged in -->
        <a class="cartIconBt" href="/cart" title="Cart">
          <img class="cartIconImg" src="./images/cartLogo.jpg" alt="Cart" id="cartIcon">
          <div class="cartNotificationBadge" id="cartBadge"></div>
        </a>
        <% } else { %>
          <!-- Display login icon if user is not logged in -->
          <a class="loginProflieBt" href="/users/login" title="Login">
            <img class="loginProflieimg" src="./images/loginLogo.jpg" alt="Login">
          </a>
          <% } %>
    </div>
  </header>

  <main>
    <h1>Welcome to Our Store</h1>
    <section>
      <div class="product-list">
        <% products.forEach(product=> { %>
          <div class="product" id="product-<%= product._id %>">
            <img src="images/products-images/<%= product._id %>/img1.jpg" alt="<%= product.name %>"
              class="product-image">
            <h3><a href="/products/<%= product._id %>">
                <%= product.name %>
              </a></h3>
            <p>
              <%= product.description %>
            </p>
            <p>Price: $<%= product.price %>
            </p>
            <div class="buttons">
              <a href="/products/<%= product._id %>" class="button details">Details</a>
              <button class="button add-to-cart" data-product-id="<%= product._id %>">Add to Cart</button>
            </div>
          </div>
          <% }) %>
      </div>
    </section>
  </main>

  <script>
    const cartBadge = document.getElementById('cartBadge');
    let initialCartCount = 0; // Replace with actual initial count if available

    document.addEventListener('DOMContentLoaded', () => {

    });

    document.querySelectorAll('.add-to-cart').forEach(button => {
      button.addEventListener('click', async () => {
        console.log('Add to cart button clicked');
        const productId = button.getAttribute('data-product-id');

        if (<%= properties.isLogged %>) {
        try {
          const response = await fetch(`/cart/add/${productId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            }
          });

          if (response.ok) {
            // Update cart badge
            let count = parseInt(cartBadge.textContent) || initialCartCount;
            count += 1;
            updateCartBadge(count);
            initialCartCount = count; // Update the initial count for further additions
          } else {
            alert('Failed to add product to cart.');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while adding the product to the cart.');
        }
      } else {
        // Redirect to login page with the current URL as a query parameter
        window.location.href = `/users/login?redirectUrl=${window.location.href}`;
      }
    });});

    function updateCartBadge(count) {
      if (count > 0) {
        cartBadge.textContent = count;
        cartBadge.style.visibility = 'visible';
      }
    }
  </script>
</body>

</html>